//***************************************************************************
//                          pvapp.h  -  description
//                             -------------------
//  begin            : Mon Oct 23 14:34:27 2017
//  generated by     : pvdevelop (C) Lehrig Software Engineering
//  email            : lehrig@t-online.de
//***************************************************************************
#ifndef _PVAPP_H_
#define _PVAPP_H_

#ifdef USE_INETD
static int trace=0; // todo: set trace=0 if you do not want printf() within event loop
#else
static int trace=1; // todo: set trace=0 if you do not want printf() within event loop
#endif

#include <sys/time.h>
#include "processviewserver.h"

#define ONE_HOUR_MIN            60
#define HALF_HOUR_SEC           1800
#define ONE_HOUR_SEC            3600
#define ONE_DAYS_SEC            86400
#define NINTY_DAYS_SEC          7776000
#define ONE_MONTH_SEC           2592000
#define FOUR_MONTHS_SEC         10368000
#define SIX_MONTHS_SEC          15778800

#define UNUSEDDBL              -2.0
#define UNDEF_DBL              -1.0
#define UNDEF_INT              -1
#define DUMMY_ID               -1
#define MSG_BLANK               ""

#define MASK_SCHEMATIC          1
#define MASK_MANUAL_OPER        2
#define MASK_SYS_SETTINGS       3
#define MASK_MESSAGES           4
#define MASK_SCADA_LOGIN        5
#define MASK_MAIN_MENU          6
#define MASK_CIP                7
//#define MASK_SYS_SETTINGS       6
//#define MASK_DIAGRAMS           7
#define MASK_BUILD_ALARMS       8
#define MASK_INFORMATION        9
#define MASK_SENS_CALIBR        10
#define MASK_TABLES_PROD        11

#define MAX_NUM_CLIENTS         5
#define LOCAL_IP_ADR            "127.0.0.1"
#define LOGIN_TIMEOUT           90  //! time-out in seconds for mask2 (login-mask)
#define SESSION_TIMEOUT         600 //! time-out in seconds for remote observer client

#define REQUEST_TIMEOUT         5
#define MAX_NUM_CLIENTS         5

#define MIN_ANALOG_DEVICE_VAL   0
#define MAX_ANALOG_DEVICE_VAL   4095

#define MAX_PLOT_ARRAY_SIZE     700

#define SEN_SLOPE_DIVIDER       10000.
#define SEN_OFFSET_DIVIDER      100.
//#define DEF_LVL_SENS_SLOPE     680
//#define DEF_LVL_SENS_OFFSET    30

#define DEF_FLOW_DIVIDER        1000.
#define MAGM_MINFLOW_DEFAULT    0.1
#define MAGM_MAXFLOW_DEFAULT    10.
#define TEMPERATURE_DIVIDER     10.    //! sensor's temperature value divider
#define PH_VALUE_DIVIDER        100.   //! sensor's pH   value divider
#define ORP_VALUE_DIVIDER       1.     //! sensor's ORP  value divider

#define NO_A_SIGNAL             61440  //! no analogue signal for unsigned values

#define MIN_1_0                 1.0
#define MIN_0_1                 0.1

#define ALL_TO_GRAY             "images/all_gr.png"
#define ALL_TO_GREEN            "images/all.png"
#define AUTO_GRAY               "images/auto_off.png"
#define MANUAL_GRAY             "images/manual_off.png"
#define AUTO_GREEN              "images/auto_on.png"
#define MANUAL_GREEN            "images/manual_on.png"

#define LIGHT_NOSIG_40          "images/semGreyB.png"
#define LIGHT_FLAT_40           "images/flatGrey.png"
#define LIGHT_GRAY_40           "images/semGreyL.png"
#define LIGHT_GREEN_40          "images/semGreenL.png"
#define LIGHT_RED_40            "images/semRedL.png"
#define LIGHT_BLUE_40           "images/semBlueL.png"
#define LIGHT_GR_GR_40          "images/semGrGrL.png"

#define LIGHT_NOSIG_27          "images/semBlueMs.png"
#define LIGHT_GREEN_27          "images/semGreenMs.png"
#define LIGHT_GRAY_27           "images/semGreyMs.png"

#define LIGHT_NOSIG_34          "images/semGreyS.png"
#define LIGHT_GREEN_34          "images/semGreen.png"
#define LIGHT_GRAY_34           "images/semGrey.png"
#define LIGHT_RED_34            "images/semRed.png"
#define LIGHT_BLUE_34           "images/semBlue.png"
#define LIGHT_GR_GR_34          "images/semGrGr.png"

#define IMG_VALVE_AJAR          "images/valve_Ajar.png"
#define IMG_VALVE_CLOSED        "images/valve_Closed.png"
#define IMG_VALVE_OPENED        "images/valve_Opened.png"
#define IMG_VALVE_UNDEF         "images/valve_Noinfo.png"

#define IMG_POWER_GREEN         "images/electric_green.png"
#define IMG_POWER_GRAY          "images/electric_gray.png"
#define IMG_POWER_RED           "images/electric_red.png"

#define IMG_26_BLACK_BLD        "images/icons/26/black_bld.png"
#define IMG_26_BLACK_PRETREAT   "images/icons/26/black_pretreat.png"
#define IMG_26_BLACK_GRAPH      "images/icons/26/black_graph.png"
#define IMG_26_BLACK_GLASS      "images/icons/26/black_glass.png"
#define IMG_26_BLACK_INFO       "images/icons/26/black_info.png"
#define IMG_26_BLACK_RO         "images/icons/26/black_ro.png"
#define IMG_26_BLACK_OPER       "images/icons/26/black_oper.png"
#define IMG_26_BLACK_WTP        "images/icons/26/black_wtp.png"
#define IMG_26_BLACK_POSTREAT   "images/icons/26/black_postreat.png"

/////new added!!
#define IMG_LVL_SW_GREY_OP      "images/icons/30x20/lvlsw_grey_opened.png"
#define IMG_LVL_SW_GREY_CL      "images/icons/30x20/lvlsw_grey_closed.png"
#define IMG_LVL_SW_GREEN_OP     "images/icons/30x20/lvlsw_green_opened.png"
#define IMG_LVL_SW_GREEN_CL     "images/icons/30x20/lvlsw_green_closed.png"
#define IMG_LVL_SW_RED_CL       "images/icons/30x20/lvlsw_red_cl.png"
#define IMG_LVL_SW_RED_OP       "images/icons/30x20/lvlsw_red_op.png"
#define IMG_LVL_SW_INACTIVE     "images/icons/30x20/lvlsw_inactive.png"

#define IMG_PRESSW_INACTIVE     "images/icons/30x20/pressw_inactive.png"
#define IMG_PRESSW_GREY         "images/icons/30x20/pressw_grey.png"
#define IMG_PRESSW_GREEN        "images/icons/30x20/pressw_green.png"
#define IMG_PRESSW_RED          "images/icons/30x20/pressw_red.png"

#define IMG_24_SEM_INACT        "images/icons/24/semInactS.png"
#define IMG_24_SEM_GREY         "images/icons/24/semGreyS.png"
#define IMG_24_SEM_GREEN        "images/icons/24/semGreenS.png"
#define IMG_24_SEM_BLUE         "images/icons/24/semBlueS.png"
#define IMG_24_SEM_GRGR         "images/icons/24/semGrGrS.png"
#define IMG_24_SEM_BLGR         "images/icons/24/semBlGrS.png"
#define IMG_24_SEM_RED          "images/icons/24/semRedS.png"

#define PLC_PROCESSING          "Processing SCADA request. Please wait...\n"
#define SESSION_TIMED_OUT       "                THE SESSION TIMED OUT"

#define STR_LOGIN               "Log In"
#define STR_LOGOUT              "Log Out"
#define STR_UNSIGNED            "Client: UNSIGNED"
#define STR_OBSERVER            "Client: OBSERVER"
#define STR_OPERATOR            "Client: OPERATOR"
#define STR_SERVICE             "Client: SERVICE"
/////new added!!! check this
///system mode
/*#define STAT_DSCNC_PLC           0x0000
#define STAT_OFF                 0xAAAA
#define STAT_REFILL_BW_T         0xBCBC
#define STAT_REFILL_IR_T         0xBBBB
#define STAT_DISTRIBUTION        0xABCD
#define STAT_STANDBY             0xFEDC
#define STAT_BACKWASH_MF         0xAEBE
#define STAT_BACKWASH_CF         0xDECE
#define STAT_ERROR               0xFFFF
*/
#define STAT_DSCNC_PLC           0x0000
#define STAT_OFF                 0xAAAA
#define STAT_REFILL_BW_T         0xBCBC
#define STAT_REFILL_IR_T         0xBBBB
#define STAT_DISTRIBUTION        0xABCD
#define STAT_STANDBY             0xFEDC
#define STAT_BACKWASH_MF         0xAEBE
#define STAT_ERROR               0xFFFF

#define STR_STAT_DSCNC_PLC      "Status: disconnected from PLC"
#define STR_STAT_OFF            "Status: off"
#define STR_REFILL_BW_T_REQUEST "Status: request b/w tank refill"
#define STR_REFILL_IR_T_REQUEST "Status: request irr tank refill"
#define STR_STAT_REFILL_BW_T    "Status: refill backwash tank"
#define STR_STAT_REFILL_IR_T    "Status: refill irrigation tank"
#define STR_STAT_DISTRIBUTION   "Status: domestic distribution"
#define STR_STAT_STANDBY        "Status: standby"
#define STR_STAT_BACKWASH_MF    "Status: backwash media filter"
#define STR_STAT_BACKWASH_CF    "Status: backwash carbon filter"
#define STR_STAT_ERROR          "Status: error"

//! UI-MESSAGES ARE USING FOR ALL MASKS
#define SYSTEM_UNDER_SU         "THE SYSTEM AT THE MOMENT IS OPERATED BY SUPERUSER"
#define SESSION_TIMED_OUT       "                THE SESSION TIMED OUT"

#define SERVICE_ALREADY_ON      "System is monitored by SUPERUSER.\n"
#define OPERATOR_ALREADY_ON     "System is monitored by OPERATOR.\n"
#define AUTHORIZATION_BUSY      "Permission is busy.\n"

#define PLC_IP_IS_NOT_VALID     "Plant PLC ip-address is not valid"
#define MAGMETER_IS_NOT_PRESENT "System with Actuator must have Magmeter"
#define PUMP_IS_NOT_PRESENT     "System must have at least one discharging pump"
#define LVL_SWITCH_MUST_HAVE    "System must have Tank 3 LOW & HIGH Level Switches"
#define LO_BOUND_NOT_DEFINED    "Low boudary is not defined"
#define HI_BOUND_NOT_CORRECT    "High boudary is incorrect"
#define VALUE_IS_NOT_DEFINED    "Value is not defined"
#define VALUE_IS_NOT_CORRECT    "Value is incorrect"
#define DATA_NOT_ALLOWED        "Sorry, requested DATA term IS NOT ALLOWED..."
#define DATA_NOT_EXISTS         "Sorry, requested DATA doesn't exist in DATABASE..."

#define PATRN_STRING            "%s"
#define PATRN_CLIENT            "Client: %s"
#define PATRN_LIFT_LVL          "Level: %02.2f m"
#define PATRN_PERCENT           "%3d %%"
#define PATRN_T3_LEVEL          "Level:%-2d cm"
#define PATRN_FLOW_VAL          " Flow: %03.2f m\u00b3/h"
#define PATRN_TOTALVAL          " \u2211: %07.1f m\u00b3"
#define PATRN_TEMP_VAL          "T = %02.1f \u00b0C"
#define PATRN_PH_VAL            "pH = %02.1f"
#define PATRN_ORP_VAL           "ORP:%3.0f mV"

#define UNDEF_LIFT_LVL          "Level: N/A m"
#define UNDEF_PERCENT           " N/A"
#define UNDEF_T3_LEVEL          "Level: N/A cm"
#define UNDEF_FLOW_VAL          " Flow: N/A m\u00b3/h"
#define UNDEF_TOTALVAL          "  \u2211: N/A m\u00b3"
#define UNDEF_T_VALUE           "T: N/A \u00b0C"
#define UNDEF_PH_VALUE          "pH: N/A"
#define UNDEF_ORP_VAL           "ORP: N/A mV"

#define STR_UNKNOWN             " UNKNOWN"
#define STR_INDEPENDENT         "INDEPENDENT"
#define STR_ALTERNATION         "ALTERNATION"

#define NORMAL_PRESSURE         "norm\n   P"
#define LOW_PRESSURE            " low\n   P"
#define UNKNOWN_PRESSURE        " ???\n   P"
#define INFLOW_ERROR            "inflow\nerror"



extern struct stat last_attr;

//!------------------- SCADA processing modes ------------------------
enum {
  UNSIGNED = 0,
  OBSERVING,
  OPERATING,
  SERVICE,
  //! add new modes here
  MAX_SYS_MODS_NUM
};

//!------------------- SCADA host types ------------------------
enum {
  UNKNOWN_HOST_TYPE = 0,
  LOCAL_HOST_TYPE,
  REMOTE_HOST_TYPE,
  //! add new host types here
  MAX_HOST_TYPES_NUM
};

typedef struct {
  int  s;
  int  service_mode;
  char ip_adr[64];
  
}ConnectedClient;

typedef struct {
  int connection_type;             //! LOCAL_HOST or REMOTE_HOST
  ConnectedClient *client;         //! (ConnectedClient *)(p->user)
  struct timeval last_time_active; //! activity time-record during the session
  
}ClientSession;

//! DEVICE IDs: enumeration of devices
//! enumeration sequence is used in dev_uiList[][] array see mask3 defenitions
enum {
   /*DEV_LIFT = 0,     //! LIFT STATION
   DEV_BLOW1A,       //! BLOWER 1A
   DEV_BLOW1B,       //! BLOWER 1B
   DEV_BLOW2,        //! BLOWER 2
   DEV_PUMP1,        //! DISCHARGE PUMP 1
   DEV_PUMP2,        //! DISCHARGE PUMP 2
   DEV_UV,           //! UV-LAMP
   DEV_SOL,          //! SOLENOID
   DEV_ACT,          //! ACTUATOR
   DEV_MAGM,         //! MAGMETER
   DEV_T3SENS,       //! T3 LVL SENSOR
   DEV_T3SW,         //! T3 LVL SWITCHES
   DEV_FLOWSW,       //! OUTPUT FLOW SWITCH
   DEV_MAIN_L,       //! MAIN POWER LINE
   DEV_PHASE1,       //! PHASE-1 POWER LINE
   DEV_PHASE2,       //! PHASE-2 POWER LINE
   DEV_PHASE3,       //! PHASE-3 POWER LINE
   DEV_SENS1,        //! CHAMBER 1A SENSORS
   DEV_SENS2,        //! CHAMBER 1B SENSORS
   DEV_SENS3,        //! CHAMBER 3 SENSORS
   DEV_SYS,          //! BIOCOMPACT SYSTEM
   */
   //! add new devices here
   DEV_SOL1 = 0,         //! SOLENOID 1 
   DEV_SOL2,         //! SOLENOID 2 
   DEV_SOL3,         //! SOLENOID 3 
   DEV_SOL4,         //! SOLENOID 4 
   DEV_SOL5,         //! SOLENOID 5 
   DEV_SOL6,         //! SOLENOID 6 
   DEV_SOL7,         //! SOLENOID 7 
   DEV_SOL8,         //! SOLENOID 8 
   DEV_SOL9,         //! SOLENOID 9 

   //new added
   DEV_DS_PUMP,      //! DOSING PUMP
   DEV_FT,           //! FILTER
   DEV_MG_IN,        //! MAGMETER_IN
   DEV_MG_OUT,       //! MAGMETER_OUT
   DEV_SOL10,        //! SOLENOID 10
   DEV_SOLA1,        //! SOLENOID A1
   DEV_SOLA2,        //! SOLENOID A2
   DEV_PSW_IN,       //! PRESSURE SWITCH IN
   DEV_PSW_AIR,      //! PRESSURE SWITCH AIR

   DEV_LVLSW_L,      //! RESORVIOR LEVEL SWITCH (LOW)
   DEV_LVLSW_H,      //! RESORVIOR LEVEL SWITCH (HIGH)
   DEV_LVLSW_E,      //! RESORVIOR LEVEL SWITCH (EMERGENCY HIGH)

   DEV_CIP_LVLSW_L,  //! CIP TANK LEVEL SWITCH (LOW)
   DEV_CIP_LVLSW_H,  //! CIP TANK LEVEL SWITCH (HIGH)
   DEV_CIP_LVLSW_E,  //! CIP TANK LEVEL SWITCH (EMERGENCY HIGH)
   DEV_CIP_PUMP,     //! CIP PUMP


   DEV_SYS,          //! MICROFILTRATION SYSTEM
   MAX_DEV_NUM  
};
////new added from delta
///Device state
enum {
   //! inactive, blue color presentation
   STAT_DSCN = 0,   //! unit is not defined or disconnected

   //! inactive, gray color presentation
   STAT_STANDBY_1,  //! unit connected, but is inactive in stage 1
   STAT_STANDBY_2,  //! unit connected, but is inactive in stage 2

   //! active, green color presentation
   STAT_ACTIVE_ON,  //! unit connected, active and turned on
   STAT_ACTIVE_OFF, //! unit connected but is turned off

   //! active, red color presentation
   STAT_IN_ERR_1,     //! unit connected and has ERRORS (stage 1)
   STAT_IN_ERR_2,     //! unit connected and has ERRORS (stage 2)
   
   MAX_STATS_NUM
};

//! IDs of Values, shown in ui:
enum {
   SYS_MODE = 0,     //! TYPE OF SYSTEM AUTHORIZATION (OPERATOR/SERVICE/OBSERVER)
   LIFT_LVL,         //! LIFT STATION LEVEL (m)
   UV_VALUE,         //! UV INTENCITY (0-100 %)
   T3_LEVEL,         //! TANK-3 DISTANCE TO WATER SURFACE (cm)
   ACT_VAL ,         //! ACTUATOR OPENING STATUS (0-100 %)
   FLOW_VAL,         //! MAGMETER FLOW (cubic meters per hour)
   TOTALVAL,         //! MAGMETER TOTALIZER (cubic meters)
   BL2_MODE,         //! BLOWER-2 MODE (0/1, - INDEPENDENT/ALTERNATION)
   TEMP_VAL,         //! TEMPERATURE VALUE (degree Celsius)
   PH_VALUE,         //! pH VALUE (pH-units)
   ORPVALUE,         //! ORP VALUE (mV)
   //! add new IDs here
   MAX_DEV_VAL_NUM
};

typedef struct devstat {
   int dev_id;       //! DEVICE ID, - see devices enumeration just above
   int exists;       //! device existing flag
   int manual;       //! manualy operating status (1/0 - manual/auto)
   int enbled;       //! powered status (1/0 - powered/not powered)
   int active;       //! running status (1/0 - active/inactive)
   int in_err;       //! error status ((1 or err_id_num)/0 - error/no-error)
}devstat_t;

//! UIID-STATE unit structures:
typedef struct uidstate {
   int ui_id;
   int state; //! state
}uidstate_t;

//! UIID-STATE unit structures with "up to date" flag:
typedef struct uidstate_up2d {
   int ui_id;
   int state; //! state
   int up2d;  //! up to date status: 0/1, '0'-not up to date, '1'-up to date
} uidstate_up2d_t;

//! UIID-VALUE unit structures:
typedef struct uidvalue {
   int    ui_id;    //! label id
   double value;    //! some value
   char   str[256]; //! string for showing in ui
   const char pattern[64]; //! label pattern for printing value
   const char def_str[64]; //! label default text
}uidvalue_t;

typedef struct adjustable_ui {
   int id;           //! widget id
   int group;        //! ui group type (see enum for ui groups)
   int x;            //! x coordinate array
   int y;            //! y coordinate array
   int w;            //! width array
   int h;            //! height array
   int v;            //! visibility array
   const char *txt;  //! text array
   
}adjustable_ui_t;

//used for device ui state change in mask1 and mask7
typedef struct dev_uistate {
   int        dev_type;
   uidstate_t ui;
}dev_uistate_t;

//! unit UI buttons states
enum {
   UNIT_DISABLED = 0,
   UNIT_ENABLED
};

//! unit UI images states
enum {
   UNIT_DCN = 0,   //! unit is not defined or disconnected
   UNIT_STANDBY,   //! unit connected, but is not active
   UNIT_ACTIVE,    //! unit connected, active and works OK
   UNIT_IN_ERR,    //! unit connected and active, but has ERRORS
   MAX_UNITS_STAT_NUM
};

enum {
   UPDATE_UI_BY_DATA = 0,
   UPDATE_UI_BY_NEXT,
   UPDATE_UI_BY_PREV,
   UPDATE_UI_BY_REFRESH,
};



//new added
extern const char *months[12];
extern devstat_t ini_devstatList[MAX_DEV_NUM];
extern devstat_t *devstatList[MAX_DEV_NUM];
//extern dev_uistate_t DeltaDevices[MAX_DEV_NUM];

extern struct sockaddr pvSockaddr;
extern int num_threads;
extern int block_local_client;
extern ConnectedClient connected_clients[MAX_NUM_CLIENTS];

extern void   map_cur_config_values_to_new();
extern int config_has_new_settings();
extern long int ms_diff(struct timeval *starttime, struct timeval *finishtime);
extern void   monitoring_clients();
//+++++++ get it from dispatcher.h
//extern void reset_resolved_event_requests();
extern int    monitoring_scada_plc_request(int eve_id);
extern void   scada_plc_send_request(int eve_id, int value);
extern int    is_an_emergency();
extern int    is_production_mode();
extern int crucial_conflict_err();
extern int    scada_cannot_be_started();
extern void   init_user_session(PARAM *p, ClientSession *session);
extern int    observer_timeout_monitoring(PARAM *p,
              int imgBlock_id, int lblUpStat_id, ClientSession *session);

extern int    config_critical_err_status(int new_settings);
extern int    ui_save_new_config_setings();
extern void   apply_new_bin_config_changes();
extern void   apply_new_int_config_changes();

extern void   init_devstat_tbl();
extern int show_mask7(PARAM *p);
extern int show_mask6(PARAM *p);
extern int show_mask5(PARAM *p);
extern int show_mask4(PARAM *p);
extern int show_mask3(PARAM *p);
extern int show_mask2(PARAM *p);
extern int show_mask1(PARAM *p);
#endif
